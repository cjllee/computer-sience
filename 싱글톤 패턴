
## 싱글톤 패턴
싱글턴 패턴은 특정 클래스의 인스턴스가 오직 하나만 존재할 수 있게 하는 디자인 패턴입니다. 비용이 많이 드는 데이터베이스 연결 모듈처럼 인스턴스 생성에 높은 비용이 소모되는 경우에 이 패턴이 효율적으로 활용됩니다. 그러나 싱글턴 패턴의 사용으로 인해 의존성이 높아지고, 테스트 주도 개발(Test-Driven Development, TDD)을 수행할 때 어려움을 겪을 수 있다는 단점이 존재합니다.

##사용하는 경우
주로 공통된 객체를 여러개 생성해서 사용해야하는 상황

데이터베이스에서 커넥션풀, 스레드풀, 캐시, 로그 기록 객체 등
안드로이드 앱 : 각 액티비티 들이나, 클래스마다 주요 클래스들을 하나하나 전달하는게 번거롭기 때문에 싱글톤 클래스를 만들어 어디서든 접근하도록 설계
또한 인스턴스가 절대적으로 한 개만 존재하는 것을 보증하고 싶을 때 사용합니다


#단점도 있나요?
## 장점

메모리 측면일 것이다

점은 다른 클래스 간에 데이터 공유가 쉽다4

## 단점

클라이언트가 구체 클래스에 의존하게 되는 상황에서는 존 관계가 발생합니다. 이로 인해 자식 클래스를 생성하는 것이 불가능하게 되고, 내부 상태를 변경하는 작업도 어려워집니다
